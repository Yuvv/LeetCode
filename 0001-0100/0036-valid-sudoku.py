#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# @File   : 0036-valid-sudoku.py
# @Date   : 2019/07/07
# @Author : Yuvv <yuvv_th@outlook.com>

from typing import List


class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        for ri in range(9):
            for ci in range(9):
                cur_val = board[ri][ci]
                if cur_val == ".":
                    continue
                for ri_x in range(ri + 1, 9):
                    if board[ri_x][ci] == cur_val:
                        return False
                for ci_x in range(ci + 1, 9):
                    if board[ri][ci_x] == cur_val:
                        return False
                cur33_ri_m = (ri // 3 + 1) * 3
                cur33_ci_m = (ci // 3 + 1) * 3
                ri_x = ri
                ci_x = ci + 1
                while ri_x < cur33_ri_m:
                    if ci_x == cur33_ci_m:
                        ri_x += 1
                        ci_x -= 3
                    else:
                        if board[ri_x][ci_x] == cur_val:
                            return False
                        ci_x += 1

        return True


if __name__ == "__main__":
    s = Solution()
    board = [[".", ".", ".", ".", "5", ".", ".", "1", "."],
             [".", "4", ".", "3", ".", ".", ".", ".", "."],
             [".", ".", ".", ".", ".", "3", ".", ".", "1"],
             ["8", ".", ".", ".", ".", ".", ".", "2", "."],
             [".", ".", "2", ".", "7", ".", ".", ".", "."],
             [".", "1", "5", ".", ".", ".", ".", ".", "."],
             [".", ".", ".", ".", ".", "2", ".", ".", "."],
             [".", "2", ".", "9", ".", ".", ".", ".", "."],
             [".", ".", "4", ".", ".", ".", ".", ".", "."]]
    print(s.isValidSudoku(board))  # false expected

    board = [["5", "3", ".", ".", "7", ".", ".", ".", "."],
             ["6", ".", ".", "1", "9", "5", ".", ".", "."],
             [".", "9", "8", ".", ".", ".", ".", "6", "."],
             ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
             ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
             ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
             [".", "6", ".", ".", ".", ".", "2", "8", "."],
             [".", ".", ".", "4", "1", "9", ".", ".", "5"],
             [".", ".", ".", ".", "8", ".", ".", "7", "9"]]
    print(s.isValidSudoku(board))  # true expected

    board = [["8", "3", ".", ".", "7", ".", ".", ".", "."],
             ["6", ".", ".", "1", "9", "5", ".", ".", "."],
             [".", "9", "8", ".", ".", ".", ".", "6", "."],
             ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
             ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
             ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
             [".", "6", ".", ".", ".", ".", "2", "8", "."],
             [".", ".", ".", "4", "1", "9", ".", ".", "5"],
             [".", ".", ".", ".", "8", ".", ".", "7", "9"]]
    print(s.isValidSudoku(board))  # false expected
